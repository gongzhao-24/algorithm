/**
* 描述：
* 创建日期：2022年06月25 17:41:
* @author gong zhao 
**/
package 动态规划.区间DP;

public class IntervalDp {
    /**
     * 顾名思义：区间dp就是在区间上进行动态规划，求解一段区间上的最优解。
     * 主要是通过合并小区间的 最优解进而得出整个大区间上最优解的dp算法。
     * 
     * 核心思路：既然让求解在一个区间上的最优解，那么我把这个区间分割成一个个小区间，求解每个小区间的最优解，
     * 再合并小区间得到大区间即可。
     * 所以在代码实现上，可以枚举区间长度len为每次分割成的小区间长度（由短到长不断合并），
     * 内层枚举该长度下可以的起点，自然终点也就明了了。然后在这个起点终点之间枚举分割点，
     * 求解这段小区间在某个分割点下的最优解。板子如下：
     * 
     * 
     * for(int len = 1;len<=n;len++){//枚举长度
        for(int j = 1;j+len<=n+1;j++){//枚举起点，ends<=n
            int ends = j+len - 1;
            for(int i = j;i<ends;i++){//枚举分割点，更新小区间最优解
                dp[j][ends] = min(dp[j][ends],dp[j][i]+dp[i+1][ends]+something);
            }
        }
    }
     */
}
